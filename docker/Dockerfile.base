FROM alpine:3.18

RUN apk update && \
    apk add --no-cache jq apache2 apache2-proxy apache2-http2 apache2-ssl nginx curl php82-cli php82-fpm php82-mysqli php82-pdo php82-pdo_mysql php82-gd php82-bcmath aspell php82-pspell php82-intl php82-xml php82-mysqlnd php82-phar php82-json php82-opcache php82-session php82-zip php82-pecl-apcu php82-pecl-yaml php82-curl php82-simplexml php82-dom php82-tokenizer php82-xmlreader php82-xmlwriter php82-ctype php82-calendar php82-exif php82-fileinfo php82-ftp php82-gettext php82-sockets php82-xsl bash nano openssh sudo cronie net-tools psmisc which unzip git iputils wget patch libc6-compat && \
    curl -s -L -o /root/wp-cli.phar https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && \
    chmod +x /root/wp-cli.phar && \
    mv /root/wp-cli.phar /usr/local/bin/wp && \
    mkdir -p /var/www/.sql-ssl/aws && \
    curl -s -o /var/www/.sql-ssl/BaltimoreCyberTrustRoot.crt.pem -L https://www.digicert.com/CACerts/BaltimoreCyberTrustRoot.crt.pem && \
    adduser -D -s /bin/bash vagrant && \
    ssh-keygen -A && \
    echo 'vagrant	ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/vagrant && \
    rm -f /etc/apache2/conf.d/ssl.conf && \
    rm -f /usr/bin/php && ln -s /usr/bin/php82 /usr/bin/php && \
    mkdir -p /run/php-fpm && \
    mkdir /root/scripts && \
    mkdir -p /var/cache/nginx && \
    mkdir -p /var/lib/php/session && chown vagrant /var/lib/php/session && \
    mkdir -p /var/log/php-fpm && \
    mkdir -p /var/www/tmp && \
    chown -R vagrant.vagrant /var/log/apache2 /var/log/nginx /var/log/php-fpm /var/www/tmp && \
    chown -R vagrant /var/lib/nginx && \
    ln -s /var/log/apache2 /var/log/httpd && \
    chmod g+w /var/log/apache2 /var/log/php-fpm && \
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
    php -r "if (hash_file('sha384', 'composer-setup.php') === 'e21205b207c3ff031906575712edab6f13eb0b361f2085f1f1237b7126d785e826a450292b6cfd1d64d92e6563bbde02') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" && \
    php composer-setup.php && \
    php -r "unlink('composer-setup.php');" && \
    mv composer.phar /usr/bin/composer && \
    echo "Done."

COPY entrypoint.sh /usr/local/bin/entrypoint.sh
EXPOSE 80 443
CMD ["entrypoint.sh"]
